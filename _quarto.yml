project:
  type: website
  render: 
    - "*.qmd"
    - "!publications_python.qmd"  ## Exclude the python script for generating pubs as it is redundant with the r version

website:
  title: "Rich Ramsey"
  description: "Personal website of Richard Ramsey"
  site-url: https://rich-ramsey.com
  repo-url: https://github.com/rich-ramsey/blogdown3
  favicon: ./img/favicon.png
  navbar:
    logo: ./img/favicon.png
    background: dark
    foreground: light
    left:
      # - href: index.qmd
      #   text: Home
      - about.qmd
      - ./publications/index.qmd
      - people.qmd
      - ./talks/index.qmd
      - posts.qmd
      - tutorials.qmd
      - resources.qmd
      - teaching.qmd
    right: 
      # - icon: twitter
      #   href: https://twitter.com/RichRamseyPhD
      #   aria-label: twitter
      #   target: _blank
      - icon: twitter
        href: https://bsky.app/profile/richramseyphd.bsky.social
        aria-label: twitter
        target: _blank
      - icon: mastodon
        href: https://mastodon.social/@richramsey
        aria-label: mastodon
        target: _blank
      - text: "{{< ai google-scholar color=white >}}"
        href: https://scholar.google.com/citations?user=otXno0YAAAAJ&hl=en
        aria-label: google-scholar
        target: _blank
      - text: "{{< ai orcid color=white >}}"
        href: https://orcid.org/0000-0002-0329-2112
        aria-label: orchid
        target: _blank
      - text: "{{< ai osf color=white >}}"
        href: https://osf.io/s67e2/
        aria-label: google-scholar
        target: _blank
      - icon: github
        href: https://github.com/rich-ramsey
        aria-label: GitHub
        target: _blank
      - icon: envelope
        href: mailto:richard.ramsey@hest.ethz.ch
        aria-label: envelope
  sidebar:
    - id: "about-sidebar"  # Default sidebar for most pages
      style: "floating"
      logo: ./img/favicon.png
      search: true
      
  page-footer:
    left: |
      {{< fa regular copyright >}} Richard Ramsey, 2023<br>
      All content licensed under {{< fa brands creative-commons >}}
      {{< fa brands creative-commons-by >}} {{< fa brands creative-commons-sa >}} {{< fa brands creative-commons-nc >}} [(CC BY-NC-SA 4.0)](http://creativecommons.org/licenses/by-nc-sa/4.0/)
      
    right: |
      Made with {{< fa brands r-project >}} and [Quarto](https://quarto.org/)<br>
      Plus help from [these fine folks](https://rich-ramsey.com/resources/resources.html#making-a-quarto-website)<br>
      [Source code at {{< fa brands github >}} GitHub](https://github.com/rich-ramsey/blogdown3)
      
      
format:
  html:
    theme: litera
    css: 
      - styles.css
      - custom.scss
    toc: true
    toc-title: "Contents"
    toc-mobile: true
    html-math-method: katex
    highlight-style: tango
    link-external-newwindow: true
    include-in-header:
      text: |
        <script>
        document.addEventListener('DOMContentLoaded', function() {
          // Make level 3 TOC items collapsible
          document.querySelectorAll('#TOC > ul > li > ul > li').forEach(function(level2Li) {
            // Check if this level 2 item has level 3 children
            const level3Ul = level2Li.querySelector('ul');
            if (level3Ul) {
              // Initially hide level 3
              level3Ul.style.display = 'none';
              
              // Add clickable indicator and style to level 2 items with children
              const level2Link = level2Li.querySelector('a');
              level2Link.style.cursor = 'pointer';
              level2Link.style.position = 'relative';
              
              // Add expand/collapse icon
              const toggleIcon = document.createElement('span');
              toggleIcon.textContent = ' + ';
              toggleIcon.style.position = 'absolute';
              toggleIcon.style.right = '-15px';
              level2Link.appendChild(toggleIcon);
              
              // Add click handler to toggle level 3
              level2Link.addEventListener('click', function(event) {
                if (event.target === toggleIcon || event.target === level2Link) {
                  event.preventDefault(); // Prevent navigation if clicking the toggle
                  
                  // Toggle visibility
                  if (level3Ul.style.display === 'none') {
                    level3Ul.style.display = 'block';
                    toggleIcon.textContent = ' - ';
                  } else {
                    level3Ul.style.display = 'none';
                    toggleIcon.textContent = ' + ';
                  }
                }
              });
            }
          });
          
          // Get current path
          const currentPath = window.location.pathname;
          
          // Only apply to specific pages/sections
          if (currentPath.includes('resources') || currentPath.includes('tutorials')) {
            // Find all h2 and h3 headings in the MAIN CONTENT ONLY (specifically exclude TOC)
            document.querySelectorAll('main h2, main h3').forEach(function(header) {
              // Skip any headers that might be in the TOC area
              if (header.closest('#TOC')) return;
              
              // Add class for styling
              header.classList.add('section-header', 'collapsed');
              
              // Initially hide content
              let content = header.nextElementSibling;
              let sectionContent = [];
              
              // For h2, stop at h1 or h2. For h3, stop at h1, h2, or h3.
              const headerLevel = header.tagName.toLowerCase();
              while (content && !content.matches(headerLevel === 'h2' ? 'h1, h2' : 'h1, h2, h3')) {
                sectionContent.push(content);
                content = content.nextElementSibling;
              }
              
              // Hide all content initially
              sectionContent.forEach(el => el.style.display = 'none');
              
              // Add click handler
              header.addEventListener('click', function() {
                this.classList.toggle('collapsed');
                
                // Find all content again (in case DOM changed)
                let nextEl = this.nextElementSibling;
                let sectionEls = [];
                
                // Match the appropriate stop level based on current header
                const stopSelectors = this.tagName.toLowerCase() === 'h2' ? 'h1, h2' : 'h1, h2, h3';
                while (nextEl && !nextEl.matches(stopSelectors)) {
                  sectionEls.push(nextEl);
                  nextEl = nextEl.nextElementSibling;
                }
                
                // Toggle visibility
                sectionEls.forEach(el => {
                  el.style.display = this.classList.contains('collapsed') ? 'none' : '';
                });
              });
            });
          }
        });
        </script>
        
editor_options: 
  type: source
  chunk_output_type: console
  markdown: 
    wrap: 72
    references:
      location: block
    canonical: true
  chunk: 
    tidy: true
    wrap: 80

